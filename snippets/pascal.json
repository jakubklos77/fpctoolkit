{
  "array var":{
    "prefix":"array",
    "body":[
      "array of $0;"
    ],
    "description":"array declaration(var)"
  },
  "begin end": {
    "prefix": "begin",
    "body": [
      "begin",
      "\t$0",
      "end;"
    ],
    "description": "begin end"
  },
  "case end": {
    "prefix": "case",
    "body": [
      "case $1 of",
      "\t$0",
      "end;"
    ],
    "description": "case end"
  },
  "class (with Create/Destroy)": {
    "prefix": "class",
    "body": [
      "T${1:ClassName} = class(T${2:ancestor})",
      "private",
      "\t",
      "protected",
      "\t",
      "public",
      "\tconstructor Create; override;",
      "\tdestructor Destroy; override;",
      "\t$0",
      "end;"
    ],
    "description": "class (with Create/Destroy)"
  },
  "constructor": {
    "prefix": "constructor",
    "body": [
      "constructor Create;$0"
    ],
    "description": "constructor"
  },
  "destructor Destroy": {
    "prefix": "destructor",
    "body": [
      "destructor Destroy; override;$0"
    ],
    "description": "destructor"
  },
  "else end": {
    "prefix": "else",
    "body": [
      "else",
      "begin",
      "\t$0",
      "end;"
    ],
    "description": "else end"
  },
  "for in end": {
    "prefix": "for",
    "body": [
      "for ${1:MyElem} in ${2:MyList} do",
      "begin",
      "\t$0",
      "end;"
    ],
    "description": "for in end"
  },
  "if end": {
    "prefix": "if",
    "body": [
      "if ${1} then",
      "$0"
    ],
    "description": "if"
  },
  "raise": {
    "prefix": "raise",
    "body": [
      "raise ${1:Exception}.Create('${2:Error Message}');$0"
    ],
    "description": "raise"
  },
  "repeat until": {
    "prefix": "repeat",
    "body": [
      "repeat",
      "\t$0",
      "until (${1:True});"
    ],
    "description": "repeat until"
  },

  "try finally": {
    "prefix": "try",
    "body": [
      "try",
      "\t$0",
      "finally",
      "\t$1",
      "end;"
    ],
    "description": "try finally"
  },
  "try except": {
    "prefix": "trye",
    "body": [
      "try",
      "\t$0",
      "except",
      "\ton ${1:e}: ${2:Exception} do",
      "end;"
    ],
    "description": "try except"
  },
  "finally end": {
    "prefix": "finally",
    "body": [
      "finally",
      "\t$0",
      "end;"
    ],
    "description": "finally end"
  },
  "except end": {
    "prefix": "except",
    "body": [
      "except",
      "\ton E: Exception do $0",
      "end;"
    ],
    "description": "try except end"
  },
  "out": {
    "prefix": "out",
    "body": [
      "out"
    ],
    "description": "out"
  },
  "then": {
    "prefix": "then",
    "body": [
      "then",
      "\t$0"
    ],
    "description": "then"
  },
  "thenb": {
    "prefix": "then",
    "body": [
      "then",
      "begin",
      "\t$0",
      "end;"
    ],
    "description": "then with begin end"
  },
  "while do": {
    "prefix": "while",
    "body": [
      "while $1 do",
      "begin",
      "\t$2",
      "end;"
    ],
    "description": "while do"
  },
  "private": {
    "prefix": "private",
    "body": [
      "private"
    ],
    "description": "private"
  },
  "protected": {
    "prefix": "protected",
    "body": [
      "protected"
    ],
    "description": "protected"
  },
  "public": {
    "prefix": "public",
    "body": [
      "public"
    ],
    "description": "public"
  },
  "published": {
    "prefix": "published",
    "body": [
      "published"
    ],
    "description": "published"
  },
  "strict private": {
    "prefix": "strict private",
    "body": [
      "strict private"
    ],
    "description": "strict private"
  },
  "strict protected": {
    "prefix": "strict protected",
    "body": [
      "strict protected"
    ],
    "description": "strict protected"
  },
  "class": {
    "prefix": "class",
    "body": [
      "class"
    ],
    "description": "class"
  },
  "record": {
    "prefix": "record",
    "body": [
      "record"
    ],
    "description": "record"
  },
  "interface": {
    "prefix": "interface",
    "body": [
      "interface"
    ],
    "description": "interface"
  },
  "implementation": {
    "prefix": "implementation",
    "body": [
      "implementation"
    ],
    "description": "implementation"
  },
  "class procedure": {
    "prefix": "class procedure",
    "body": [
      "class procedure"
    ],
    "description": "class procedure"
  },
  "class function": {
    "prefix": "class function",
    "body": [
      "class function"
    ],
    "description": "class function"
  },
  "cdecl": {
    "prefix": "cdecl",
    "body": [
      "cdecl"
    ],
    "description": "cdecl"
  },
  "stdcall": {
    "prefix": "stdcall",
    "body": [
      "stdcall"
    ],
    "description": "stdcall"
  },
  "external": {
    "prefix": "external",
    "body": [
      "external"
    ],
    "description": "external"
  },
  "static": {
    "prefix": "static",
    "body": [
      "static"
    ],
    "description": "static"
  },
  "virtual": {
    "prefix": "virtual",
    "body": [
      "virtual"
    ],
    "description": "virtual"
  },
  "override": {
    "prefix": "override",
    "body": [
      "override"
    ],
    "description": "override"
  },
  "reintroduce": {
    "prefix": "reintroduce",
    "body": [
      "reintroduce"
    ],
    "description": "reintroduce"
  },
  "overload": {
    "prefix": "overload",
    "body": [
      "overload"
    ],
    "description": "overload"
  },
  "mode": {
    "prefix": "mode",
    "body": [
      "{\\$mode ${1|delphi,objfpc|}}{\\$H+}"
    ],
    "description": "{$mode }"
  },

  "unit": {
    "prefix": "unit",
    "body": [
      "unit ${1:unit_name};",
      "",
      "interface",
      "",
      "uses",
      "\tTypesUnit;",
      "",
      "type",
      "\t$0",
      "",
      "implementation",
      "",
      "uses",
      "\tSysUtils,",
      "\tClasses;",
      "",
      "end."
    ],
    "description": "unit template"
  },
  "specialize":{
    "prefix":"specialize",
    "body":[
      "specialize $0;"
    ],
    "description":"specialize declaration"
  }
}